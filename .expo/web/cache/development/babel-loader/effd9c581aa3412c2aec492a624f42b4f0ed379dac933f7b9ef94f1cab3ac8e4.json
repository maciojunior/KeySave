{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Card(_ref) {\n  var data = _ref.data,\n    onPress = _ref.onPress;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    passwordIsVisible = _useState2[0],\n    setPasswordIsVisible = _useState2[1];\n  function togglePasswordIsVisible() {\n    setPasswordIsVisible(function (prevState) {\n      return !prevState;\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: togglePasswordIsVisible,\n      children: _jsx(MaterialIcons, {\n        name: passwordIsVisible ? \"visibility\" : \"visibility-off\",\n        size: 22,\n        color: \"#888D97\"\n      })\n    }), _jsx(View, {\n      style: styles.content,\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: data.name\n        }), passwordIsVisible ? _jsx(Text, {\n          style: styles.password,\n          children: data.password\n        }) : _jsx(Text, {\n          style: styles.email,\n          children: data.user\n        })]\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: onPress,\n      children: _jsx(MaterialIcons, {\n        name: \"delete\",\n        size: 22,\n        color: \"#888D97\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useState","Text","TouchableOpacity","View","MaterialIcons","styles","jsx","_jsx","jsxs","_jsxs","Card","_ref","data","onPress","_useState","_useState2","_slicedToArray","passwordIsVisible","setPasswordIsVisible","togglePasswordIsVisible","prevState","style","container","children","name","size","color","content","title","password","email","user","button"],"sources":["C:/DEV/CRUD/Guard_keys/src/components/Card/index.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nimport { styles } from './styles';\n\nexport type CardProps = {\n  id: string;\n  name: string;\n  user: string;\n  password: string;\n}\ntype Props = {\n  data: CardProps;\n  onPress: () => void;\n}\n\nexport function Card({ data, onPress }: Props) {\n  const [passwordIsVisible, setPasswordIsVisible] = useState(false);\n\n  function togglePasswordIsVisible() {\n    setPasswordIsVisible(prevState => !prevState);\n  }\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={togglePasswordIsVisible}>\n        <MaterialIcons\n          name={passwordIsVisible ? \"visibility\" : \"visibility-off\"}\n          size={22}\n          color=\"#888D97\"\n        />\n      </TouchableOpacity>\n\n      <View style={styles.content}>\n        <View>\n          <Text style={styles.title}>\n            {data.name}\n          </Text>\n\n          {\n            passwordIsVisible\n              ?\n              <Text style={styles.password}>\n                {data.password}\n              </Text>\n              :\n              <Text style={styles.email}>\n                {data.user}\n              </Text>\n          }\n        </View>\n      </View>\n\n      <TouchableOpacity\n        style={styles.button}\n        onPress={onPress}\n      >\n        <MaterialIcons\n          name=\"delete\"\n          size={22}\n          color=\"#888D97\"\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAEjC,SAASC,aAAa,QAAQ,oBAAoB;AAElD,SAASC,MAAM;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAalC,OAAO,SAASC,IAAIA,CAAAC,IAAA,EAA2B;EAAA,IAAxBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EAClC,IAAAC,SAAA,GAAkDd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1DG,iBAAiB,GAAAF,UAAA;IAAEG,oBAAoB,GAAAH,UAAA;EAE9C,SAASI,uBAAuBA,CAAA,EAAG;IACjCD,oBAAoB,CAAC,UAAAE,SAAS;MAAA,OAAI,CAACA,SAAS;IAAA,EAAC;EAC/C;EAEA,OACEX,KAAA,CAACN,IAAI;IAACkB,KAAK,EAAEhB,MAAM,CAACiB,SAAU;IAAAC,QAAA,GAC5BhB,IAAA,CAACL,gBAAgB;MAACW,OAAO,EAAEM,uBAAwB;MAAAI,QAAA,EACjDhB,IAAA,CAACH,aAAa;QACZoB,IAAI,EAAEP,iBAAiB,GAAG,YAAY,GAAG,gBAAiB;QAC1DQ,IAAI,EAAE,EAAG;QACTC,KAAK,EAAC;MAAS,CAChB;IAAC,CACc,CAAC,EAEnBnB,IAAA,CAACJ,IAAI;MAACkB,KAAK,EAAEhB,MAAM,CAACsB,OAAQ;MAAAJ,QAAA,EAC1Bd,KAAA,CAACN,IAAI;QAAAoB,QAAA,GACHhB,IAAA,CAACN,IAAI;UAACoB,KAAK,EAAEhB,MAAM,CAACuB,KAAM;UAAAL,QAAA,EACvBX,IAAI,CAACY;QAAI,CACN,CAAC,EAGLP,iBAAiB,GAEfV,IAAA,CAACN,IAAI;UAACoB,KAAK,EAAEhB,MAAM,CAACwB,QAAS;UAAAN,QAAA,EAC1BX,IAAI,CAACiB;QAAQ,CACV,CAAC,GAEPtB,IAAA,CAACN,IAAI;UAACoB,KAAK,EAAEhB,MAAM,CAACyB,KAAM;UAAAP,QAAA,EACvBX,IAAI,CAACmB;QAAI,CACN,CAAC;MAAA,CAEP;IAAC,CACH,CAAC,EAEPxB,IAAA,CAACL,gBAAgB;MACfmB,KAAK,EAAEhB,MAAM,CAAC2B,MAAO;MACrBnB,OAAO,EAAEA,OAAQ;MAAAU,QAAA,EAEjBhB,IAAA,CAACH,aAAa;QACZoB,IAAI,EAAC,QAAQ;QACbC,IAAI,EAAE,EAAG;QACTC,KAAK,EAAC;MAAS,CAChB;IAAC,CACc,CAAC;EAAA,CACf,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}